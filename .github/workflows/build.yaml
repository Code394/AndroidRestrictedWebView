name: 🤖 Generate Android App
permissions:
    contents: write

on:
    workflow_dispatch:
        inputs:
            id:
              description: 'Run identifier'
              required: true
            domain:
                description: 'URL of the Website'
                required: true
            second_domain:
                description: 'Second domain (for example files subdomain)'
            app_name:
                description: 'Name of the App'
                required: true
            view_mode:
                description: 'View Mode'
                required: true
                type: choice
                default: 'AUTO'
                options:
                    - 'AUTO'
                    - 'PORTRAIT'
                    - 'LANDSCAPE'

jobs:
    id:
      # https://stackoverflow.com/a/73837663
      name: Workflow ID Provider
      runs-on: ubuntu-latest
      steps:
        - name: ${{github.event.inputs.id}}
          run: echo run identifier ${{ inputs.id }}
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4
            - name: Validate domains
              run: |
                  validate_domain() {
                    DOMAIN="${1}"
                    
                    # Remove protocol from URL if present
                    DOMAIN="${DOMAIN#http://}"
                    DOMAIN="${DOMAIN#https://}"
                    DOMAIN="${DOMAIN%%/*}"
                    
                    if ! [[ $DOMAIN =~ ^[A-Za-z0-9.-]+\.[A-Za-z]{2,}$ ]]; then
                      echo "Error: Invalid domain format in $DOMAIN!"
                      exit 1
                    fi
                    echo $DOMAIN
                  }

                  # Validate primary domain
                  DOMAIN=$(validate_domain "${{ inputs.domain }}")
                  echo "ALLOWED_DOMAIN=$DOMAIN" >> $GITHUB_ENV

                  # Validate second domain if present
                  if [ -n "${{ inputs.second_domain }}" ]; then
                    SECOND_DOMAIN=$(validate_domain "${{ inputs.second_domain }}")
                    echo "SECOND_ALLOWED_DOMAIN=$SECOND_DOMAIN" >> $GITHUB_ENV
                  fi

            - name: Validate app_name input
              run: |
                  if ! perl -e "exit 1 unless '${{ inputs.app_name }}' =~ /^[:a-zA-Zא-ת0-9 _-]+$/"; then
                    echo "Error: Invalid app_name format!"
                    exit 1
                  fi
            - name: Fix applicationId
              run: |
                  # remove all not-allowed characters https://developer.android.com/build/configure-app-module#set-application-id
                  APPLICATION_ID=$(echo "${{ env.ALLOWED_DOMAIN }}" | perl -pe 's/[^a-zA-Z0-9_.]//g')
                  echo "APPLICATION_ID=com.restictedwebview.$APPLICATION_ID" >> $GITHUB_ENV                  
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: 17
                  distribution: 'temurin'
            - name: Make gradlew executable
              run: chmod +x ./gradlew
            - name: Decode Keystore
              id: decode_keystore
              uses: timheuer/base64-to-file@v1.2.4
              with:
                  fileName: 'android_keystore.jks'
                  fileDir: '/home/runner/work/AndroidRestrictedWebView/AndroidRestrictedWebView/app/keystore/'
                  encodedString: ${{ secrets.KEYSTORE }}
            - name: Build APK
              run: ./gradlew assembleRelease
              env:
                  SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
                  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
                  SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
                  APPLICATION_ID: ${{ env.APPLICATION_ID }}
                  APP_NAME: ${{ inputs.app_name }}
                  VIEW_MODE: ${{ inputs.view_mode }}
                  ALLOWED_DOMAIN: ${{ env.ALLOWED_DOMAIN }}
                  SECOND_ALLOWED_DOMAIN: ${{ env.SECOND_ALLOWED_DOMAIN }}
            - name: Rename APK
              run: mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/webview-${{ env.ALLOWED_DOMAIN }}.apk
            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ github.run_id }}
                  name: Release v${{ github.run_id }} (${{ env.ALLOWED_DOMAIN }})
                  prerelease: true
                  files: app/build/outputs/apk/release/webview-${{ env.ALLOWED_DOMAIN }}.apk
                  body: |
                      Restricted WebView App.
                      Domain: [${{ env.ALLOWED_DOMAIN }}](//${{ env.ALLOWED_DOMAIN }})
                      Second Domain: [${{ env.SECOND_ALLOWED_DOMAIN }}](//${{ env.SECOND_ALLOWED_DOMAIN }})
                      App Name: ${{ inputs.app_name }}
                      View Mode: ${{ inputs.view_mode }}
            - name: Get the APK URL
              run: |
                echo "APK URL: ${{ fromJSON(steps.create_release.outputs.assets)[0].browser_download_url }}"